{"ast":null,"code":"var _jsxFileName = \"/home/utsab/Desktop/bingo-app/src/Pages/BingoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport './bingopage.css';\nimport { io } from 'socket.io-client';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"/\");\n\nconst BingoPage = () => {\n  _s();\n\n  const [boxes, setBoxes] = useState([]);\n  const {\n    name,\n    room\n  } = useParams();\n\n  function shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n  }\n\n  const handleClick = e => {\n    const target = e.target.innerHTML * 1; // console.log(target)\n    // console.log(boxes)\n\n    socket.emit(\"clicked\", {\n      target\n    });\n  }; //game logic building \n  //check row and columns \n\n\n  const checkRow = useCallback(() => {\n    if (boxes[0].clicked && boxes[1].clicked && boxes[2].clicked || boxes[3].clicked && boxes[4].clicked && boxes[5].clicked || boxes[6].clicked && boxes[7].clicked && boxes[8].clicked) {\n      alert(`${name} won `);\n      window.location.reload();\n    }\n  }, [boxes, name]);\n  useEffect(() => {\n    socket.on(\"clicked\", _ref => {\n      let {\n        target\n      } = _ref;\n      //console.log(target)\n      checkRow();\n      let boxArray = boxes.map(i => i.num === Number(target) ? { ...i,\n        clicked: true\n      } : i);\n      setBoxes(boxArray);\n      console.log(boxes); //console.log(\"hi\")\n    });\n  }, [boxes, checkRow]);\n  useEffect(() => {\n    socket.emit(\"joinRoom\", {\n      room,\n      name\n    });\n  }, [room, name]);\n  useEffect(() => {\n    // let array = [1,2,3,4,5,6,7,8,9]\n    let array = [{\n      num: 1,\n      clicked: false\n    }, {\n      num: 2,\n      clicked: false\n    }, {\n      num: 3,\n      clicked: false\n    }, {\n      num: 4,\n      clicked: false\n    }, {\n      num: 5,\n      clicked: false\n    }, {\n      num: 6,\n      clicked: false\n    }, {\n      num: 7,\n      clicked: false\n    }, {\n      num: 8,\n      clicked: false\n    }, {\n      num: 9,\n      clicked: false\n    }];\n    shuffle(array); //console.log('i run')\n\n    setBoxes(array);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bingo-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bingo-box\",\n      children: boxes.map((element, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: element.clicked,\n        onClick: handleClick,\n        className: !element.clicked ? \"boxes enabled\" : \"boxes disabled\",\n        children: element.num\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BingoPage, \"74xPCMsvItuHoCZjofx2dkHTO8E=\", false, function () {\n  return [useParams];\n});\n\n_c = BingoPage;\nexport default BingoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BingoPage\");","map":{"version":3,"sources":["/home/utsab/Desktop/bingo-app/src/Pages/BingoPage.js"],"names":["React","useEffect","useState","useCallback","io","useParams","socket","BingoPage","boxes","setBoxes","name","room","shuffle","array","sort","Math","random","handleClick","e","target","innerHTML","emit","checkRow","clicked","alert","window","location","reload","on","boxArray","map","i","num","Number","console","log","element"],"mappings":"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","sourcesContent":["import React, { useEffect, useState,useCallback } from 'react'\nimport './bingopage.css'\nimport { io } from 'socket.io-client'\nimport { useParams } from 'react-router-dom';\n\n\nconst socket = io(\"/\");\n\nconst BingoPage = () => {\n  const [boxes,setBoxes] = useState([])\n  const {name,room} = useParams()\n\n  function shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n  }\n\n  const handleClick =(e)=>{\n     const target = e.target.innerHTML*1;\n    // console.log(target)\n    // console.log(boxes)\n   socket.emit(\"clicked\",{target})\n\n  }\n  //game logic building \n  //check row and columns \n\nconst checkRow = useCallback(()=>{\n  if((boxes[0].clicked&&boxes[1].clicked&&boxes[2].clicked)||(boxes[3].clicked&&boxes[4].clicked&&boxes[5].clicked)||(boxes[6].clicked&&boxes[7].clicked&&boxes[8].clicked)){\n    alert(`${name} won `)\n    window.location.reload()\n  }\n},[boxes,name])\n\n  useEffect(()=>{\n    socket.on(\"clicked\",({target})=>{\n      //console.log(target)\n    checkRow()\n    let  boxArray = boxes.map(i=> i.num===Number(target)?{...i,clicked:true}:i)\n\n    setBoxes(boxArray)\n    \n    console.log(boxes)\n  //console.log(\"hi\")\n    })\n \n  },[boxes,checkRow])\n\n  useEffect(()=>{\n    socket.emit(\"joinRoom\",{room,name})\n  },[room,name])\n\n\n  useEffect(()=>{\n   // let array = [1,2,3,4,5,6,7,8,9]\n    let array = [{num:1,clicked:false},{num:2,clicked:false},{num:3,clicked:false},{num:4,clicked:false},{num:5,clicked:false},\n      {num:6,clicked:false},{num:7,clicked:false},{num:8,clicked:false},{num:9,clicked:false}]\n    shuffle(array)\n    //console.log('i run')\n    setBoxes(array)\n  },[])\n\n  return (\n    <div className='bingo-container'>\n        <div className='bingo-box'>\n            {\n                boxes.map((element,i)=>(\n                    <button disabled={element.clicked} onClick={handleClick} className={!element.clicked?\"boxes enabled\":\"boxes disabled\"} key={i}>\n                        {element.num}\n                        </button>\n                ))\n            }\n        </div>\n    </div>\n  )\n}\n\nexport default BingoPage"]},"metadata":{},"sourceType":"module"}