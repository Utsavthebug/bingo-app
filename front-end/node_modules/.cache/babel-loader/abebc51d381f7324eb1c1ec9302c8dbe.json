{"ast":null,"code":"var _jsxFileName = \"/home/utsab/Desktop/bingo-app/src/Pages/BingoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './bingopage.css';\nimport { io } from 'socket.io-client';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"/\");\n\nconst BingoPage = () => {\n  _s();\n\n  const [boxes, setBoxes] = useState([]);\n  const {\n    name,\n    room\n  } = useParams();\n\n  function shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n  }\n\n  const handleClick = e => {\n    const target = e.target.innerHTML * 1; // console.log(target)\n    // console.log(boxes)\n\n    socket.emit(\"clicked\", {\n      target\n    });\n  };\n\n  useEffect(() => {\n    socket.on(\"clicked\", _ref => {\n      let {\n        target\n      } = _ref;\n      setBoxes(boxes.map(i => i.num === Number(target) ? { ...i,\n        clicked: true\n      } : i));\n    });\n  }, []);\n  useEffect(() => {\n    socket.emit(\"joinRoom\", {\n      room,\n      name\n    });\n  }, [room, name]);\n  useEffect(() => {\n    // let array = [1,2,3,4,5,6,7,8,9]\n    let array = [{\n      num: 1,\n      clicked: false\n    }, {\n      num: 2,\n      clicked: false\n    }, {\n      num: 3,\n      clicked: false\n    }, {\n      num: 4,\n      clicked: false\n    }, {\n      num: 5,\n      clicked: false\n    }, {\n      num: 6,\n      clicked: false\n    }, {\n      num: 7,\n      clicked: false\n    }, {\n      num: 8,\n      clicked: false\n    }, {\n      num: 9,\n      clicked: false\n    }];\n    shuffle(array);\n    setBoxes(array);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bingo-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bingo-box\",\n      children: boxes.map((element, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: element.clicked,\n        onClick: handleClick,\n        className: !element.clicked ? \"boxes enabled\" : \"boxes disabled\",\n        children: element.num\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BingoPage, \"NE+wht4KAWmKAedDLS/3+bOlovg=\", false, function () {\n  return [useParams];\n});\n\n_c = BingoPage;\nexport default BingoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BingoPage\");","map":{"version":3,"sources":["/home/utsab/Desktop/bingo-app/src/Pages/BingoPage.js"],"names":["React","useEffect","useState","io","useParams","socket","BingoPage","boxes","setBoxes","name","room","shuffle","array","sort","Math","random","handleClick","e","target","innerHTML","emit","on","map","i","num","Number","clicked","element"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAGA,MAAMC,MAAM,GAAGF,EAAE,CAAC,GAAD,CAAjB;;AAEA,MAAMG,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM;AAACO,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAcN,SAAS,EAA7B;;AAEA,WAASO,OAAT,CAAiBC,KAAjB,EAAwB;AACtBA,IAAAA,KAAK,CAACC,IAAN,CAAW,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAjC;AACD;;AAED,QAAMC,WAAW,GAAGC,CAAD,IAAK;AACrB,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAF,CAASC,SAAT,GAAmB,CAAlC,CADqB,CAEtB;AACA;;AACDd,IAAAA,MAAM,CAACe,IAAP,CAAY,SAAZ,EAAsB;AAACF,MAAAA;AAAD,KAAtB;AAEA,GAND;;AAQAjB,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAoB,QAAY;AAAA,UAAX;AAACH,QAAAA;AAAD,OAAW;AAChCV,MAAAA,QAAQ,CAACD,KAAK,CAACe,GAAN,CAAUC,CAAC,IAAGA,CAAC,CAACC,GAAF,KAAQC,MAAM,CAACP,MAAD,CAAd,GAAuB,EAAC,GAAGK,CAAJ;AAAMG,QAAAA,OAAO,EAAC;AAAd,OAAvB,GAA2CH,CAAzD,CAAD,CAAR;AAEC,KAHD;AAKD,GANQ,EAMP,EANO,CAAT;AAQAtB,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,MAAM,CAACe,IAAP,CAAY,UAAZ,EAAuB;AAACV,MAAAA,IAAD;AAAMD,MAAAA;AAAN,KAAvB;AACD,GAFQ,EAEP,CAACC,IAAD,EAAMD,IAAN,CAFO,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAI;AACb;AACC,QAAIW,KAAK,GAAG,CAAC;AAACY,MAAAA,GAAG,EAAC,CAAL;AAAOE,MAAAA,OAAO,EAAC;AAAf,KAAD,EAAuB;AAACF,MAAAA,GAAG,EAAC,CAAL;AAAOE,MAAAA,OAAO,EAAC;AAAf,KAAvB,EAA6C;AAACF,MAAAA,GAAG,EAAC,CAAL;AAAOE,MAAAA,OAAO,EAAC;AAAf,KAA7C,EAAmE;AAACF,MAAAA,GAAG,EAAC,CAAL;AAAOE,MAAAA,OAAO,EAAC;AAAf,KAAnE,EAAyF;AAACF,MAAAA,GAAG,EAAC,CAAL;AAAOE,MAAAA,OAAO,EAAC;AAAf,KAAzF,EACV;AAACF,MAAAA,GAAG,EAAC,CAAL;AAAOE,MAAAA,OAAO,EAAC;AAAf,KADU,EACY;AAACF,MAAAA,GAAG,EAAC,CAAL;AAAOE,MAAAA,OAAO,EAAC;AAAf,KADZ,EACkC;AAACF,MAAAA,GAAG,EAAC,CAAL;AAAOE,MAAAA,OAAO,EAAC;AAAf,KADlC,EACwD;AAACF,MAAAA,GAAG,EAAC,CAAL;AAAOE,MAAAA,OAAO,EAAC;AAAf,KADxD,CAAZ;AAEAf,IAAAA,OAAO,CAACC,KAAD,CAAP;AACAJ,IAAAA,QAAQ,CAACI,KAAD,CAAR;AACD,GANQ,EAMP,EANO,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAEQL,KAAK,CAACe,GAAN,CAAU,CAACK,OAAD,EAASJ,CAAT,kBACN;AAAQ,QAAA,QAAQ,EAAEI,OAAO,CAACD,OAA1B;AAAmC,QAAA,OAAO,EAAEV,WAA5C;AAAyD,QAAA,SAAS,EAAE,CAACW,OAAO,CAACD,OAAT,GAAiB,eAAjB,GAAiC,gBAArG;AAAA,kBACKC,OAAO,CAACH;AADb,SAA4HD,CAA5H;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlDD;;GAAMjB,S;UAEgBF,S;;;KAFhBE,S;AAoDN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './bingopage.css'\nimport { io } from 'socket.io-client'\nimport { useParams } from 'react-router-dom';\n\n\nconst socket = io(\"/\");\n\nconst BingoPage = () => {\n  const [boxes,setBoxes] = useState([])\n  const {name,room} = useParams()\n\n  function shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n  }\n\n  const handleClick =(e)=>{\n     const target = e.target.innerHTML*1;\n    // console.log(target)\n    // console.log(boxes)\n   socket.emit(\"clicked\",{target})\n\n  }\n\n  useEffect(()=>{\n    socket.on(\"clicked\",({target})=>{\n    setBoxes(boxes.map(i=> i.num===Number(target)?{...i,clicked:true}:i))\n  \n    })\n \n  },[])\n\n  useEffect(()=>{\n    socket.emit(\"joinRoom\",{room,name})\n  },[room,name])\n\n\n  useEffect(()=>{\n   // let array = [1,2,3,4,5,6,7,8,9]\n    let array = [{num:1,clicked:false},{num:2,clicked:false},{num:3,clicked:false},{num:4,clicked:false},{num:5,clicked:false},\n      {num:6,clicked:false},{num:7,clicked:false},{num:8,clicked:false},{num:9,clicked:false}]\n    shuffle(array)\n    setBoxes(array)\n  },[])\n\n  return (\n    <div className='bingo-container'>\n        <div className='bingo-box'>\n            {\n                boxes.map((element,i)=>(\n                    <button disabled={element.clicked} onClick={handleClick} className={!element.clicked?\"boxes enabled\":\"boxes disabled\"} key={i}>\n                        {element.num}\n                        </button>\n                ))\n            }\n        </div>\n    </div>\n  )\n}\n\nexport default BingoPage"]},"metadata":{},"sourceType":"module"}